<<<<<<< HEAD
<?xml version='1.1' encoding='UTF-8'?>
<flow-build plugin="workflow-job@1316.vd2290d3341a_f">
  <actions>
    <hudson.model.CauseAction>
      <causeBag class="linked-hash-map">
        <entry>
          <hudson.model.Cause_-UserIdCause>
            <userId>admin</userId>
          </hudson.model.Cause_-UserIdCause>
          <int>1</int>
        </entry>
      </causeBag>
    </hudson.model.CauseAction>
    <org.jenkinsci.plugins.workflow.libs.LibrariesAction plugin="pipeline-groovy-lib@671.v07c339c842e8">
      <libraries/>
    </org.jenkinsci.plugins.workflow.libs.LibrariesAction>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.ExecutionModelAction plugin="pipeline-model-definition@2.2144.v077a_d1928a_40">
      <stagesUUID>650959ce-04cd-4b1b-8de7-5c2ac016cf34</stagesUUID>
      <pipelineDefs>
        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTPipelineDef plugin="pipeline-model-api@2.2144.v077a_d1928a_40">
          <stages>
            <stages>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>git</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                        <name>script</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>scriptBlock</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">git branch: &apos;wip&apos;, url: &apos;https://github.com/jonathan-be21/bindecy-interview.git&apos;</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>Generate Maximal Number</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                        <name>script</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>scriptBlock</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">copyArtifacts(projectName: &apos;test&apos;,selector: lastCompleted(), target: savedNumbersDir)
                    sh &quot;ls -l&quot;
                    def maxNumbers = []
                    def files = sh(script: &quot;ls ${savedNumbersDir}&quot;, returnStdout: true).trim().split(&quot;\n&quot;)
                    println(files)
                    for (file in files) {
                        def currentMaxNumber = readFile(file)
                        maxNumbers.add(currentMaxNumber)
                    }
                    def selectedMaxNumbers = input(message: &apos;Choose one or more maximal numbers:&apos;,choices: maxNumbers)</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
            </stages>
            <uuid>650959ce-04cd-4b1b-8de7-5c2ac016cf34</uuid>
          </stages>
          <agent>
            <agentType>
              <key>any</key>
            </agentType>
          </agent>
        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTPipelineDef>
      </pipelineDefs>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.ExecutionModelAction>
    <hudson.plugins.git.util.BuildData plugin="git@5.2.0">
      <buildsByBranchName>
        <entry>
          <string>refs/remotes/origin/wip</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@4.4.0">
              <sha1>aee4f8b01b7032847f481288a1d5b81b39a4e6a3</sha1>
              <branches class="list">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>refs/remotes/origin/wip</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision reference="../marked"/>
            <hudsonBuildNumber>7</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
      </buildsByBranchName>
      <lastBuild reference="../buildsByBranchName/entry/hudson.plugins.git.util.Build"/>
      <remoteUrls>
        <string>https://github.com/jonathan-be21/bindecy-interview.git</string>
      </remoteUrls>
    </hudson.plugins.git.util.BuildData>
    <org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState plugin="workflow-scm-step@415.v434365564324">
      <revisionStates>
        <entry>
          <string>git https://github.com/jonathan-be21/bindecy-interview.git</string>
          <hudson.scm.SCMRevisionState_-None/>
        </entry>
      </revisionStates>
    </org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState>
    <hudson.plugins.copyartifact.CopyArtifact_-EnvAction plugin="copyartifact@714.v28a_34f8c563f"/>
  </actions>
  <queueId>162</queueId>
  <timestamp>1691884509451</timestamp>
  <startTime>1691884509457</startTime>
  <result>FAILURE</result>
  <duration>2664</duration>
  <charset>UTF-8</charset>
  <keepLog>false</keepLog>
  <execution class="org.jenkinsci.plugins.workflow.cps.CpsFlowExecution">
    <result>FAILURE</result>
    <script>def savedNumbersDir = &apos;saved-numbers&apos;
pipeline {
    agent any
    stages {
        stage(&apos;git&apos;) {
            steps {
                script {
                    git branch: &apos;wip&apos;, url: &apos;https://github.com/jonathan-be21/bindecy-interview.git&apos;
                }
            }
        }
        stage(&apos;Generate Maximal Number&apos;) {
            steps {
                script {
                    copyArtifacts(projectName: &apos;test&apos;,selector: lastCompleted(), target: savedNumbersDir)
                    sh &quot;ls -l&quot;
                    def maxNumbers = []
                    def files = sh(script: &quot;ls ${savedNumbersDir}&quot;, returnStdout: true).trim().split(&quot;\n&quot;)
                    println(files)
                    for (file in files) {
                        def currentMaxNumber = readFile(file)
                        maxNumbers.add(currentMaxNumber)
                    }
                    def selectedMaxNumbers = input(message: &apos;Choose one or more maximal numbers:&apos;,choices: maxNumbers)
                    
                }
            }
        }
    }
}</script>
    <loadedScripts class="map"/>
    <durabilityHint>MAX_SURVIVABILITY</durabilityHint>
    <timings class="map">
      <entry>
        <string>flowNode</string>
        <long>426246653</long>
      </entry>
      <entry>
        <string>classLoad</string>
        <long>230458810</long>
      </entry>
      <entry>
        <string>run</string>
        <long>1448786158</long>
      </entry>
      <entry>
        <string>parse</string>
        <long>31828320</long>
      </entry>
      <entry>
        <string>saveProgram</string>
        <long>505597816</long>
      </entry>
    </timings>
    <sandbox>false</sandbox>
    <iota>29</iota>
    <head>1:29</head>
    <done>true</done>
    <resumeBlocked>false</resumeBlocked>
  </execution>
  <completed>true</completed>
  <checkouts class="hudson.util.PersistedList">
    <org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
      <scm class="hudson.plugins.git.GitSCM" plugin="git@5.2.0">
        <configVersion>2</configVersion>
        <userRemoteConfigs>
          <hudson.plugins.git.UserRemoteConfig>
            <url>https://github.com/jonathan-be21/bindecy-interview.git</url>
          </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches class="singleton-list">
          <hudson.plugins.git.BranchSpec>
            <name>*/wip</name>
          </hudson.plugins.git.BranchSpec>
        </branches>
        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
        <submoduleCfg class="empty-list"/>
        <extensions>
          <hudson.plugins.git.extensions.impl.LocalBranch>
            <localBranch>wip</localBranch>
          </hudson.plugins.git.extensions.impl.LocalBranch>
        </extensions>
      </scm>
      <node></node>
      <workspace>/var/jenkins_home/workspace/pipeline2</workspace>
      <changelogFile>/var/jenkins_home/jobs/pipeline2/builds/7/changelog6442423893206971977.xml</changelogFile>
      <pollingBaseline class="hudson.scm.SCMRevisionState$None" reference="../../../actions/org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState/revisionStates/entry/hudson.scm.SCMRevisionState_-None"/>
    </org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
  </checkouts>
</flow-build>
=======
version https://git-lfs.github.com/spec/v1
oid sha256:2aecd6d93323a8e8f1f131ff5d751a7cb4f50a6602017805af687c4914dc3fdc
size 10692
>>>>>>> 01a95f3 (jenkins pipelines A-B)
