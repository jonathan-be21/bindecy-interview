<<<<<<< HEAD
<?xml version='1.1' encoding='UTF-8'?>
<flow-build plugin="workflow-job@1316.vd2290d3341a_f">
  <actions>
    <hudson.model.CauseAction>
      <causeBag class="linked-hash-map">
        <entry>
          <hudson.model.Cause_-UserIdCause>
            <userId>admin</userId>
          </hudson.model.Cause_-UserIdCause>
          <int>1</int>
        </entry>
      </causeBag>
    </hudson.model.CauseAction>
    <org.jenkinsci.plugins.workflow.libs.LibrariesAction plugin="pipeline-groovy-lib@671.v07c339c842e8">
      <libraries/>
    </org.jenkinsci.plugins.workflow.libs.LibrariesAction>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.ExecutionModelAction plugin="pipeline-model-definition@2.2144.v077a_d1928a_40">
      <stagesUUID>ea475899-0aa1-4f17-bc49-80189179e39d</stagesUUID>
      <pipelineDefs>
        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTPipelineDef plugin="pipeline-model-api@2.2144.v077a_d1928a_40">
          <stages>
            <stages>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>Generate Maximal Number</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                        <name>script</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>scriptBlock</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">for (int i = 0; i &lt; 3; i++) {
                        node(&quot;java-docker-slave&quot;) {
                            stage(&apos;test&apos;) {
                                randomNumber = Math.abs( new Random().nextInt() % (50000 - 2000) ) + 2000
                                randNumbers &lt;&lt; randomNumber
                            }
                        }
                    }</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>Save Maximal Number</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                        <name>script</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>scriptBlock</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">println(&quot;randNumbers: ${randNumbers}&quot;)
                    def maximalNumber = randNumbers.max()
                    println(&quot;max number: ${maximalNumber}&quot;)
                    sh &quot;mkdir -p ${savedNumbersDir}&quot;
                    copyArtifacts(projectName: &apos;test&apos;,selector: lastSuccessful(), target: savedNumbersDir)
                    sh &quot;echo ${maximalNumber} &gt; ${savedNumbersDir}/maximalNumber-${currentBuild.number}.txt&quot;
                    archiveArtifacts artifacts: &quot;${savedNumbersDir}/*.txt&quot;, fingerprint: true, onlyIfSuccessful: true</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
            </stages>
            <uuid>ea475899-0aa1-4f17-bc49-80189179e39d</uuid>
          </stages>
          <agent>
            <agentType>
              <key>any</key>
            </agentType>
          </agent>
        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTPipelineDef>
      </pipelineDefs>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.ExecutionModelAction>
    <hudson.plugins.copyartifact.CopyArtifact_-EnvAction plugin="copyartifact@714.v28a_34f8c563f"/>
    <hudson.tasks.Fingerprinter_-FingerprintAction>
      <record>
        <entry>
          <string>saved-numbers/maximalNumber-33.txt</string>
          <string>7215fbef584a2a1e42ebbef2ab0d9e30</string>
        </entry>
        <entry>
          <string>saved-numbers/maximalNumber-34.txt</string>
          <string>078e6a9af29e653ab4eee149bc44d95c</string>
        </entry>
        <entry>
          <string>saved-numbers/maximalNumber-36.txt</string>
          <string>be3d90a0c8f9dea71062518a2d22ab73</string>
        </entry>
        <entry>
          <string>saved-numbers/maximalNumber.txt</string>
          <string>767ebb5ed9143535efde689e3a7a8fbc</string>
        </entry>
        <entry>
          <string>saved-numbers/maximalNumber-35.txt</string>
          <string>663cbc6fc2fa1efe6e9979deaea1b06c</string>
        </entry>
        <entry>
          <string>saved-numbers/maximalNumber-32.txt</string>
          <string>c04410d41daf6024893d166d381a8ebd</string>
        </entry>
        <entry>
          <string>saved-numbers/maximalNumber-30.txt</string>
          <string>c95f1b3a6c1e056b9461ed18b8905e02</string>
        </entry>
      </record>
    </hudson.tasks.Fingerprinter_-FingerprintAction>
  </actions>
  <queueId>155</queueId>
  <timestamp>1691884050039</timestamp>
  <startTime>1691884050044</startTime>
  <result>SUCCESS</result>
  <duration>200914</duration>
  <charset>UTF-8</charset>
  <keepLog>false</keepLog>
  <execution class="org.jenkinsci.plugins.workflow.cps.CpsFlowExecution">
    <result>SUCCESS</result>
    <script>// define values for running in parallel
def minParallelExec = 10
def randNumbers = []
def savedNumbersDir = &apos;saved-numbers&apos;

pipeline {
    agent any
    stages {
        stage(&apos;Generate Maximal Number&apos;) {
            steps {
                script {
                    for (int i = 0; i &lt; 3; i++) {
                        node(&quot;java-docker-slave&quot;) {
                            stage(&apos;test&apos;) {
                                randomNumber = Math.abs( new Random().nextInt() % (50000 - 2000) ) + 2000
                                randNumbers &lt;&lt; randomNumber
                            }
                        }
                    }
                }
            }
        }
        stage(&apos;Save Maximal Number&apos;) {
            steps {
                script {
                    println(&quot;randNumbers: ${randNumbers}&quot;)
                    def maximalNumber = randNumbers.max()
                    println(&quot;max number: ${maximalNumber}&quot;)
                    sh &quot;mkdir -p ${savedNumbersDir}&quot;
                    copyArtifacts(projectName: &apos;test&apos;,selector: lastSuccessful(), target: savedNumbersDir)
                    sh &quot;echo ${maximalNumber} &gt; ${savedNumbersDir}/maximalNumber-${currentBuild.number}.txt&quot;
                    archiveArtifacts artifacts: &quot;${savedNumbersDir}/*.txt&quot;, fingerprint: true, onlyIfSuccessful: true
                }
            }
        }
    }
}</script>
    <loadedScripts class="map"/>
    <durabilityHint>MAX_SURVIVABILITY</durabilityHint>
    <timings class="map">
      <entry>
        <string>flowNode</string>
        <long>777638755</long>
      </entry>
      <entry>
        <string>classLoad</string>
        <long>250274094</long>
      </entry>
      <entry>
        <string>run</string>
        <long>3176728096</long>
      </entry>
      <entry>
        <string>parse</string>
        <long>39995210</long>
      </entry>
      <entry>
        <string>saveProgram</string>
        <long>1439565822</long>
      </entry>
    </timings>
    <sandbox>false</sandbox>
    <iota>53</iota>
    <head>1:53</head>
    <done>true</done>
    <resumeBlocked>false</resumeBlocked>
  </execution>
  <completed>true</completed>
  <checkouts class="hudson.util.PersistedList"/>
</flow-build>
=======
version https://git-lfs.github.com/spec/v1
oid sha256:64190ee2812d9572c4ecb5103ae0ec448d22b92973220d7307d929114b52617e
size 9674
>>>>>>> 01a95f3 (jenkins pipelines A-B)
